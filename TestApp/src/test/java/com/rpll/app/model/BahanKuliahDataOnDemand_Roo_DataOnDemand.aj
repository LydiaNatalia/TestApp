// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rpll.app.model;

import com.rpll.app.model.BahanKuliah;
import com.rpll.app.model.BahanKuliahDataOnDemand;
import com.rpll.app.model.MataKuliahDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect BahanKuliahDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BahanKuliahDataOnDemand: @Component;
    
    private Random BahanKuliahDataOnDemand.rnd = new SecureRandom();
    
    private List<BahanKuliah> BahanKuliahDataOnDemand.data;
    
    @Autowired
    private MataKuliahDataOnDemand BahanKuliahDataOnDemand.mataKuliahDataOnDemand;
    
    public BahanKuliah BahanKuliahDataOnDemand.getNewTransientBahanKuliah(int index) {
        BahanKuliah obj = new BahanKuliah();
        setBahan(obj, index);
        setNamaBahan(obj, index);
        return obj;
    }
    
    public void BahanKuliahDataOnDemand.setBahan(BahanKuliah obj, int index) {
        byte[] bahan = String.valueOf(index).getBytes();
        obj.setBahan(bahan);
    }
    
    public void BahanKuliahDataOnDemand.setNamaBahan(BahanKuliah obj, int index) {
        String namaBahan = "namaBahan_" + index;
        if (namaBahan.length() > 40) {
            namaBahan = namaBahan.substring(0, 40);
        }
        obj.setNamaBahan(namaBahan);
    }
    
    public BahanKuliah BahanKuliahDataOnDemand.getSpecificBahanKuliah(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        BahanKuliah obj = data.get(index);
        String id = obj.getKodeBahan();
        return BahanKuliah.findBahanKuliah(id);
    }
    
    public BahanKuliah BahanKuliahDataOnDemand.getRandomBahanKuliah() {
        init();
        BahanKuliah obj = data.get(rnd.nextInt(data.size()));
        String id = obj.getKodeBahan();
        return BahanKuliah.findBahanKuliah(id);
    }
    
    public boolean BahanKuliahDataOnDemand.modifyBahanKuliah(BahanKuliah obj) {
        return false;
    }
    
    public void BahanKuliahDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = BahanKuliah.findBahanKuliahEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'BahanKuliah' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<BahanKuliah>();
        for (int i = 0; i < 10; i++) {
            BahanKuliah obj = getNewTransientBahanKuliah(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
