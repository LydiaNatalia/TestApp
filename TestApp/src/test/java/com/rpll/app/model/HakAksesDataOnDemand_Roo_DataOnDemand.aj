// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rpll.app.model;

import com.rpll.app.model.HakAkses;
import com.rpll.app.model.HakAksesDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect HakAksesDataOnDemand_Roo_DataOnDemand {
    
    declare @type: HakAksesDataOnDemand: @Component;
    
    private Random HakAksesDataOnDemand.rnd = new SecureRandom();
    
    private List<HakAkses> HakAksesDataOnDemand.data;
    
    public HakAkses HakAksesDataOnDemand.getNewTransientHakAkses(int index) {
        HakAkses obj = new HakAkses();
        setAcceptFrsOnline(obj, index);
        setForumKritikDanSaran(obj, index);
        setFrsOnline(obj, index);
        setInputAbsensiMahasiswa(obj, index);
        setInputBahanTugasKuliah(obj, index);
        setInputBobotNilai(obj, index);
        setInputNilaiMahasiswa(obj, index);
        setIsiKritikDanSaran(obj, index);
        setKartuHasilStudi(obj, index);
        setKrsOnline(obj, index);
        setLaporanKeuangan(obj, index);
        setProgramStudi(obj, index);
        setTranskripNilaiResmiDanHistori(obj, index);
        setUpdateBadanHukum(obj, index);
        setUpdateDataBiaya(obj, index);
        setUpdateDataFasilitas(obj, index);
        setUpdateDataHakAkses(obj, index);
        setUpdateDataKeuangan(obj, index);
        setUpdateDataMahasiswaDanAlumni(obj, index);
        setUpdateDataPeriode(obj, index);
        setUpdateDataStaffDanDosen(obj, index);
        setUpdateJadwalRuanganKelas(obj, index);
        setUpdateMataKuliah(obj, index);
        setUpdatePengumuman(obj, index);
        setViewAbsensiMahasiswa(obj, index);
        setViewPengumuman(obj, index);
        return obj;
    }
    
    public void HakAksesDataOnDemand.setAcceptFrsOnline(HakAkses obj, int index) {
        String acceptFrsOnline = "acceptFrsOnline_" + index;
        if (acceptFrsOnline.length() > 20) {
            acceptFrsOnline = acceptFrsOnline.substring(0, 20);
        }
        obj.setAcceptFrsOnline(acceptFrsOnline);
    }
    
    public void HakAksesDataOnDemand.setForumKritikDanSaran(HakAkses obj, int index) {
        String forumKritikDanSaran = "forumKritikDanSara_" + index;
        if (forumKritikDanSaran.length() > 20) {
            forumKritikDanSaran = forumKritikDanSaran.substring(0, 20);
        }
        obj.setForumKritikDanSaran(forumKritikDanSaran);
    }
    
    public void HakAksesDataOnDemand.setFrsOnline(HakAkses obj, int index) {
        String frsOnline = "frsOnline_" + index;
        if (frsOnline.length() > 20) {
            frsOnline = frsOnline.substring(0, 20);
        }
        obj.setFrsOnline(frsOnline);
    }
    
    public void HakAksesDataOnDemand.setInputAbsensiMahasiswa(HakAkses obj, int index) {
        String inputAbsensiMahasiswa = "inputAbsensiMahasi_" + index;
        if (inputAbsensiMahasiswa.length() > 20) {
            inputAbsensiMahasiswa = inputAbsensiMahasiswa.substring(0, 20);
        }
        obj.setInputAbsensiMahasiswa(inputAbsensiMahasiswa);
    }
    
    public void HakAksesDataOnDemand.setInputBahanTugasKuliah(HakAkses obj, int index) {
        String inputBahanTugasKuliah = "inputBahanTugasKul_" + index;
        if (inputBahanTugasKuliah.length() > 20) {
            inputBahanTugasKuliah = inputBahanTugasKuliah.substring(0, 20);
        }
        obj.setInputBahanTugasKuliah(inputBahanTugasKuliah);
    }
    
    public void HakAksesDataOnDemand.setInputBobotNilai(HakAkses obj, int index) {
        String inputBobotNilai = "inputBobotNilai_" + index;
        if (inputBobotNilai.length() > 20) {
            inputBobotNilai = inputBobotNilai.substring(0, 20);
        }
        obj.setInputBobotNilai(inputBobotNilai);
    }
    
    public void HakAksesDataOnDemand.setInputNilaiMahasiswa(HakAkses obj, int index) {
        String inputNilaiMahasiswa = "inputNilaiMahasisw_" + index;
        if (inputNilaiMahasiswa.length() > 20) {
            inputNilaiMahasiswa = inputNilaiMahasiswa.substring(0, 20);
        }
        obj.setInputNilaiMahasiswa(inputNilaiMahasiswa);
    }
    
    public void HakAksesDataOnDemand.setIsiKritikDanSaran(HakAkses obj, int index) {
        String isiKritikDanSaran = "isiKritikDanSaran_" + index;
        if (isiKritikDanSaran.length() > 20) {
            isiKritikDanSaran = isiKritikDanSaran.substring(0, 20);
        }
        obj.setIsiKritikDanSaran(isiKritikDanSaran);
    }
    
    public void HakAksesDataOnDemand.setKartuHasilStudi(HakAkses obj, int index) {
        String kartuHasilStudi = "kartuHasilStudi_" + index;
        if (kartuHasilStudi.length() > 20) {
            kartuHasilStudi = kartuHasilStudi.substring(0, 20);
        }
        obj.setKartuHasilStudi(kartuHasilStudi);
    }
    
    public void HakAksesDataOnDemand.setKrsOnline(HakAkses obj, int index) {
        String krsOnline = "krsOnline_" + index;
        if (krsOnline.length() > 20) {
            krsOnline = krsOnline.substring(0, 20);
        }
        obj.setKrsOnline(krsOnline);
    }
    
    public void HakAksesDataOnDemand.setLaporanKeuangan(HakAkses obj, int index) {
        String laporanKeuangan = "laporanKeuangan_" + index;
        if (laporanKeuangan.length() > 20) {
            laporanKeuangan = laporanKeuangan.substring(0, 20);
        }
        obj.setLaporanKeuangan(laporanKeuangan);
    }
    
    public void HakAksesDataOnDemand.setProgramStudi(HakAkses obj, int index) {
        String programStudi = "programStudi_" + index;
        if (programStudi.length() > 20) {
            programStudi = programStudi.substring(0, 20);
        }
        obj.setProgramStudi(programStudi);
    }
    
    public void HakAksesDataOnDemand.setTranskripNilaiResmiDanHistori(HakAkses obj, int index) {
        String transkripNilaiResmiDanHistori = "transkripNilaiResm_" + index;
        if (transkripNilaiResmiDanHistori.length() > 20) {
            transkripNilaiResmiDanHistori = transkripNilaiResmiDanHistori.substring(0, 20);
        }
        obj.setTranskripNilaiResmiDanHistori(transkripNilaiResmiDanHistori);
    }
    
    public void HakAksesDataOnDemand.setUpdateBadanHukum(HakAkses obj, int index) {
        String updateBadanHukum = "updateBadanHukum_" + index;
        if (updateBadanHukum.length() > 20) {
            updateBadanHukum = updateBadanHukum.substring(0, 20);
        }
        obj.setUpdateBadanHukum(updateBadanHukum);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataBiaya(HakAkses obj, int index) {
        String updateDataBiaya = "updateDataBiaya_" + index;
        if (updateDataBiaya.length() > 20) {
            updateDataBiaya = updateDataBiaya.substring(0, 20);
        }
        obj.setUpdateDataBiaya(updateDataBiaya);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataFasilitas(HakAkses obj, int index) {
        String updateDataFasilitas = "updateDataFasilita_" + index;
        if (updateDataFasilitas.length() > 20) {
            updateDataFasilitas = updateDataFasilitas.substring(0, 20);
        }
        obj.setUpdateDataFasilitas(updateDataFasilitas);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataHakAkses(HakAkses obj, int index) {
        String updateDataHakAkses = "updateDataHakAkses_" + index;
        if (updateDataHakAkses.length() > 20) {
            updateDataHakAkses = updateDataHakAkses.substring(0, 20);
        }
        obj.setUpdateDataHakAkses(updateDataHakAkses);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataKeuangan(HakAkses obj, int index) {
        String updateDataKeuangan = "updateDataKeuangan_" + index;
        if (updateDataKeuangan.length() > 20) {
            updateDataKeuangan = updateDataKeuangan.substring(0, 20);
        }
        obj.setUpdateDataKeuangan(updateDataKeuangan);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataMahasiswaDanAlumni(HakAkses obj, int index) {
        String updateDataMahasiswaDanAlumni = "updateDataMahasisw_" + index;
        if (updateDataMahasiswaDanAlumni.length() > 20) {
            updateDataMahasiswaDanAlumni = updateDataMahasiswaDanAlumni.substring(0, 20);
        }
        obj.setUpdateDataMahasiswaDanAlumni(updateDataMahasiswaDanAlumni);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataPeriode(HakAkses obj, int index) {
        String updateDataPeriode = "updateDataPeriode_" + index;
        if (updateDataPeriode.length() > 20) {
            updateDataPeriode = updateDataPeriode.substring(0, 20);
        }
        obj.setUpdateDataPeriode(updateDataPeriode);
    }
    
    public void HakAksesDataOnDemand.setUpdateDataStaffDanDosen(HakAkses obj, int index) {
        String updateDataStaffDanDosen = "updateDataStaffDan_" + index;
        if (updateDataStaffDanDosen.length() > 20) {
            updateDataStaffDanDosen = updateDataStaffDanDosen.substring(0, 20);
        }
        obj.setUpdateDataStaffDanDosen(updateDataStaffDanDosen);
    }
    
    public void HakAksesDataOnDemand.setUpdateJadwalRuanganKelas(HakAkses obj, int index) {
        String updateJadwalRuanganKelas = "updateJadwalRuanga_" + index;
        if (updateJadwalRuanganKelas.length() > 20) {
            updateJadwalRuanganKelas = updateJadwalRuanganKelas.substring(0, 20);
        }
        obj.setUpdateJadwalRuanganKelas(updateJadwalRuanganKelas);
    }
    
    public void HakAksesDataOnDemand.setUpdateMataKuliah(HakAkses obj, int index) {
        String updateMataKuliah = "updateMataKuliah_" + index;
        if (updateMataKuliah.length() > 20) {
            updateMataKuliah = updateMataKuliah.substring(0, 20);
        }
        obj.setUpdateMataKuliah(updateMataKuliah);
    }
    
    public void HakAksesDataOnDemand.setUpdatePengumuman(HakAkses obj, int index) {
        String updatePengumuman = "updatePengumuman_" + index;
        if (updatePengumuman.length() > 20) {
            updatePengumuman = updatePengumuman.substring(0, 20);
        }
        obj.setUpdatePengumuman(updatePengumuman);
    }
    
    public void HakAksesDataOnDemand.setViewAbsensiMahasiswa(HakAkses obj, int index) {
        String viewAbsensiMahasiswa = "viewAbsensiMahasis_" + index;
        if (viewAbsensiMahasiswa.length() > 20) {
            viewAbsensiMahasiswa = viewAbsensiMahasiswa.substring(0, 20);
        }
        obj.setViewAbsensiMahasiswa(viewAbsensiMahasiswa);
    }
    
    public void HakAksesDataOnDemand.setViewPengumuman(HakAkses obj, int index) {
        String viewPengumuman = "viewPengumuman_" + index;
        if (viewPengumuman.length() > 20) {
            viewPengumuman = viewPengumuman.substring(0, 20);
        }
        obj.setViewPengumuman(viewPengumuman);
    }
    
    public HakAkses HakAksesDataOnDemand.getSpecificHakAkses(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        HakAkses obj = data.get(index);
        String id = obj.getKodeAkses();
        return HakAkses.findHakAkses(id);
    }
    
    public HakAkses HakAksesDataOnDemand.getRandomHakAkses() {
        init();
        HakAkses obj = data.get(rnd.nextInt(data.size()));
        String id = obj.getKodeAkses();
        return HakAkses.findHakAkses(id);
    }
    
    public boolean HakAksesDataOnDemand.modifyHakAkses(HakAkses obj) {
        return false;
    }
    
    public void HakAksesDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = HakAkses.findHakAksesEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'HakAkses' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<HakAkses>();
        for (int i = 0; i < 10; i++) {
            HakAkses obj = getNewTransientHakAkses(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
