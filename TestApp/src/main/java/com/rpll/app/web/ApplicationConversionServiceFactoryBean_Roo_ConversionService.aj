// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rpll.app.web;

import com.rpll.app.model.Absen;
import com.rpll.app.model.AbsenPK;
import com.rpll.app.model.BadanHukum;
import com.rpll.app.model.BahanKuliah;
import com.rpll.app.model.Biaya;
import com.rpll.app.model.Departemen;
import com.rpll.app.model.Dosen;
import com.rpll.app.model.Fakultas;
import com.rpll.app.model.Fasilitas;
import com.rpll.app.model.Frs;
import com.rpll.app.model.FrsPK;
import com.rpll.app.model.HakAkses;
import com.rpll.app.model.Jadwal;
import com.rpll.app.model.JadwalPK;
import com.rpll.app.model.Kelas;
import com.rpll.app.model.KritikSaran;
import com.rpll.app.model.Mahasiswa;
import com.rpll.app.model.MataKuliah;
import com.rpll.app.model.Nilai;
import com.rpll.app.model.NilaiPK;
import com.rpll.app.model.Pegawai;
import com.rpll.app.model.Pengumuman;
import com.rpll.app.model.Periode;
import com.rpll.app.model.Staff;
import com.rpll.app.model.TanggungJawab;
import com.rpll.app.model.TanggungJawabPK;
import com.rpll.app.web.ApplicationConversionServiceFactoryBean;
import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Absen, String> ApplicationConversionServiceFactoryBean.getAbsenToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Absen, java.lang.String>() {
            public String convert(Absen absen) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<AbsenPK, Absen> ApplicationConversionServiceFactoryBean.getIdToAbsenConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.AbsenPK, com.rpll.app.model.Absen>() {
            public com.rpll.app.model.Absen convert(com.rpll.app.model.AbsenPK id) {
                return Absen.findAbsen(id);
            }
        };
    }
    
    public Converter<String, Absen> ApplicationConversionServiceFactoryBean.getStringToAbsenConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Absen>() {
            public com.rpll.app.model.Absen convert(String id) {
                return getObject().convert(getObject().convert(id, AbsenPK.class), Absen.class);
            }
        };
    }
    
    public Converter<BadanHukum, String> ApplicationConversionServiceFactoryBean.getBadanHukumToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.BadanHukum, java.lang.String>() {
            public String convert(BadanHukum badanHukum) {
                return new StringBuilder().append(badanHukum.getNamaBhukum()).append(' ').append(badanHukum.getTanggalBerdiri()).append(' ').append(badanHukum.getNomorAkta()).append(' ').append(badanHukum.getTanggalAkta()).toString();
            }
        };
    }
    
    public Converter<String, BadanHukum> ApplicationConversionServiceFactoryBean.getIdToBadanHukumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.BadanHukum>() {
            public com.rpll.app.model.BadanHukum convert(java.lang.String id) {
                return BadanHukum.findBadanHukum(id);
            }
        };
    }
    
    public Converter<BahanKuliah, String> ApplicationConversionServiceFactoryBean.getBahanKuliahToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.BahanKuliah, java.lang.String>() {
            public String convert(BahanKuliah bahanKuliah) {
                return new StringBuilder().append(bahanKuliah.getNamaBahan()).toString();
            }
        };
    }
    
    public Converter<String, BahanKuliah> ApplicationConversionServiceFactoryBean.getIdToBahanKuliahConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.BahanKuliah>() {
            public com.rpll.app.model.BahanKuliah convert(java.lang.String id) {
                return BahanKuliah.findBahanKuliah(id);
            }
        };
    }
    
    public Converter<Biaya, String> ApplicationConversionServiceFactoryBean.getBiayaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Biaya, java.lang.String>() {
            public String convert(Biaya biaya) {
                return new StringBuilder().append(biaya.getBiayaTetap()).append(' ').append(biaya.getBiayaSks()).append(' ').append(biaya.getBiayaPraktikum()).append(' ').append(biaya.getBiayaMhs()).toString();
            }
        };
    }
    
    public Converter<String, Biaya> ApplicationConversionServiceFactoryBean.getIdToBiayaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Biaya>() {
            public com.rpll.app.model.Biaya convert(java.lang.String id) {
                return Biaya.findBiaya(id);
            }
        };
    }
    
    public Converter<Departemen, String> ApplicationConversionServiceFactoryBean.getDepartemenToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Departemen, java.lang.String>() {
            public String convert(Departemen departemen) {
                return new StringBuilder().append(departemen.getNamaDepart()).toString();
            }
        };
    }
    
    public Converter<String, Departemen> ApplicationConversionServiceFactoryBean.getIdToDepartemenConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Departemen>() {
            public com.rpll.app.model.Departemen convert(java.lang.String id) {
                return Departemen.findDepartemen(id);
            }
        };
    }
    
    public Converter<Dosen, String> ApplicationConversionServiceFactoryBean.getDosenToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Dosen, java.lang.String>() {
            public String convert(Dosen dosen) {
                return new StringBuilder().append(dosen.getPassDosen()).append(' ').append(dosen.getStatusDosen()).append(' ').append(dosen.getGelar()).append(' ').append(dosen.getTanggalIjazah()).toString();
            }
        };
    }
    
    public Converter<String, Dosen> ApplicationConversionServiceFactoryBean.getIdToDosenConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Dosen>() {
            public com.rpll.app.model.Dosen convert(java.lang.String id) {
                return Dosen.findDosen(id);
            }
        };
    }
    
    public Converter<Fakultas, String> ApplicationConversionServiceFactoryBean.getFakultasToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Fakultas, java.lang.String>() {
            public String convert(Fakultas fakultas) {
                return new StringBuilder().append(fakultas.getNamaFakultas()).toString();
            }
        };
    }
    
    public Converter<String, Fakultas> ApplicationConversionServiceFactoryBean.getIdToFakultasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Fakultas>() {
            public com.rpll.app.model.Fakultas convert(java.lang.String id) {
                return Fakultas.findFakultas(id);
            }
        };
    }
    
    public Converter<Fasilitas, String> ApplicationConversionServiceFactoryBean.getFasilitasToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Fasilitas, java.lang.String>() {
            public String convert(Fasilitas fasilitas) {
                return new StringBuilder().append(fasilitas.getLuasTanah()).append(' ').append(fasilitas.getLuasLahan()).append(' ').append(fasilitas.getLuasRkuliah()).append(' ').append(fasilitas.getJumlahRkuliah()).toString();
            }
        };
    }
    
    public Converter<String, Fasilitas> ApplicationConversionServiceFactoryBean.getIdToFasilitasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Fasilitas>() {
            public com.rpll.app.model.Fasilitas convert(java.lang.String id) {
                return Fasilitas.findFasilitas(id);
            }
        };
    }
    
    public Converter<Frs, String> ApplicationConversionServiceFactoryBean.getFrsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Frs, java.lang.String>() {
            public String convert(Frs frs) {
                return new StringBuilder().append(frs.getStatusValid()).toString();
            }
        };
    }
    
    public Converter<FrsPK, Frs> ApplicationConversionServiceFactoryBean.getIdToFrsConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.FrsPK, com.rpll.app.model.Frs>() {
            public com.rpll.app.model.Frs convert(com.rpll.app.model.FrsPK id) {
                return Frs.findFrs(id);
            }
        };
    }
    
    public Converter<String, Frs> ApplicationConversionServiceFactoryBean.getStringToFrsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Frs>() {
            public com.rpll.app.model.Frs convert(String id) {
                return getObject().convert(getObject().convert(id, FrsPK.class), Frs.class);
            }
        };
    }
    
    public Converter<HakAkses, String> ApplicationConversionServiceFactoryBean.getHakAksesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.HakAkses, java.lang.String>() {
            public String convert(HakAkses hakAkses) {
                return new StringBuilder().append(hakAkses.getUpdateBadanHukum()).append(' ').append(hakAkses.getUpdateDataFasilitas()).append(' ').append(hakAkses.getUpdateMataKuliah()).append(' ').append(hakAkses.getUpdateJadwalRuanganKelas()).toString();
            }
        };
    }
    
    public Converter<String, HakAkses> ApplicationConversionServiceFactoryBean.getIdToHakAksesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.HakAkses>() {
            public com.rpll.app.model.HakAkses convert(java.lang.String id) {
                return HakAkses.findHakAkses(id);
            }
        };
    }
    
    public Converter<Jadwal, String> ApplicationConversionServiceFactoryBean.getJadwalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Jadwal, java.lang.String>() {
            public String convert(Jadwal jadwal) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<JadwalPK, Jadwal> ApplicationConversionServiceFactoryBean.getIdToJadwalConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.JadwalPK, com.rpll.app.model.Jadwal>() {
            public com.rpll.app.model.Jadwal convert(com.rpll.app.model.JadwalPK id) {
                return Jadwal.findJadwal(id);
            }
        };
    }
    
    public Converter<String, Jadwal> ApplicationConversionServiceFactoryBean.getStringToJadwalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Jadwal>() {
            public com.rpll.app.model.Jadwal convert(String id) {
                return getObject().convert(getObject().convert(id, JadwalPK.class), Jadwal.class);
            }
        };
    }
    
    public Converter<Kelas, String> ApplicationConversionServiceFactoryBean.getKelasToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Kelas, java.lang.String>() {
            public String convert(Kelas kelas) {
                return new StringBuilder().append(kelas.getTipeKelas()).append(' ').append(kelas.getRuangan()).append(' ').append(kelas.getTanggal()).append(' ').append(kelas.getJam()).toString();
            }
        };
    }
    
    public Converter<String, Kelas> ApplicationConversionServiceFactoryBean.getIdToKelasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Kelas>() {
            public com.rpll.app.model.Kelas convert(java.lang.String id) {
                return Kelas.findKelas(id);
            }
        };
    }
    
    public Converter<KritikSaran, String> ApplicationConversionServiceFactoryBean.getKritikSaranToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.KritikSaran, java.lang.String>() {
            public String convert(KritikSaran kritikSaran) {
                return new StringBuilder().append(kritikSaran.getIsiKritik()).toString();
            }
        };
    }
    
    public Converter<String, KritikSaran> ApplicationConversionServiceFactoryBean.getIdToKritikSaranConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.KritikSaran>() {
            public com.rpll.app.model.KritikSaran convert(java.lang.String id) {
                return KritikSaran.findKritikSaran(id);
            }
        };
    }
    
    public Converter<Mahasiswa, String> ApplicationConversionServiceFactoryBean.getMahasiswaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Mahasiswa, java.lang.String>() {
            public String convert(Mahasiswa mahasiswa) {
                return new StringBuilder().append(mahasiswa.getNamaMhs()).append(' ').append(mahasiswa.getStatusMhs()).append(' ').append(mahasiswa.getIpk()).append(' ').append(mahasiswa.getPassMhs()).toString();
            }
        };
    }
    
    public Converter<String, Mahasiswa> ApplicationConversionServiceFactoryBean.getIdToMahasiswaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Mahasiswa>() {
            public com.rpll.app.model.Mahasiswa convert(java.lang.String id) {
                return Mahasiswa.findMahasiswa(id);
            }
        };
    }
    
    public Converter<MataKuliah, String> ApplicationConversionServiceFactoryBean.getMataKuliahToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.MataKuliah, java.lang.String>() {
            public String convert(MataKuliah mataKuliah) {
                return new StringBuilder().append(mataKuliah.getNamaMatkul()).append(' ').append(mataKuliah.getPrasyarat()).append(' ').append(mataKuliah.getPeriodeSemester()).append(' ').append(mataKuliah.getKurikulum()).toString();
            }
        };
    }
    
    public Converter<String, MataKuliah> ApplicationConversionServiceFactoryBean.getIdToMataKuliahConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.MataKuliah>() {
            public com.rpll.app.model.MataKuliah convert(java.lang.String id) {
                return MataKuliah.findMataKuliah(id);
            }
        };
    }
    
    public Converter<Nilai, String> ApplicationConversionServiceFactoryBean.getNilaiToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Nilai, java.lang.String>() {
            public String convert(Nilai nilai) {
                return new StringBuilder().append(nilai.getIndeks()).append(' ').append(nilai.getSemester()).append(' ').append(nilai.getNilai1()).append(' ').append(nilai.getNilai2()).toString();
            }
        };
    }
    
    public Converter<NilaiPK, Nilai> ApplicationConversionServiceFactoryBean.getIdToNilaiConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.NilaiPK, com.rpll.app.model.Nilai>() {
            public com.rpll.app.model.Nilai convert(com.rpll.app.model.NilaiPK id) {
                return Nilai.findNilai(id);
            }
        };
    }
    
    public Converter<String, Nilai> ApplicationConversionServiceFactoryBean.getStringToNilaiConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Nilai>() {
            public com.rpll.app.model.Nilai convert(String id) {
                return getObject().convert(getObject().convert(id, NilaiPK.class), Nilai.class);
            }
        };
    }
    
    public Converter<Pegawai, String> ApplicationConversionServiceFactoryBean.getPegawaiToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Pegawai, java.lang.String>() {
            public String convert(Pegawai pegawai) {
                return new StringBuilder().append(pegawai.getNamaPegawai()).toString();
            }
        };
    }
    
    public Converter<String, Pegawai> ApplicationConversionServiceFactoryBean.getIdToPegawaiConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Pegawai>() {
            public com.rpll.app.model.Pegawai convert(java.lang.String id) {
                return Pegawai.findPegawai(id);
            }
        };
    }
    
    public Converter<Pengumuman, String> ApplicationConversionServiceFactoryBean.getPengumumanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Pengumuman, java.lang.String>() {
            public String convert(Pengumuman pengumuman) {
                return new StringBuilder().append(pengumuman.getJudul()).append(' ').append(pengumuman.getIsi()).toString();
            }
        };
    }
    
    public Converter<String, Pengumuman> ApplicationConversionServiceFactoryBean.getIdToPengumumanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Pengumuman>() {
            public com.rpll.app.model.Pengumuman convert(java.lang.String id) {
                return Pengumuman.findPengumuman(id);
            }
        };
    }
    
    public Converter<Periode, String> ApplicationConversionServiceFactoryBean.getPeriodeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Periode, java.lang.String>() {
            public String convert(Periode periode) {
                return new StringBuilder().append(periode.getNamaPeriode()).append(' ').append(periode.getAwal()).append(' ').append(periode.getAkhir()).toString();
            }
        };
    }
    
    public Converter<String, Periode> ApplicationConversionServiceFactoryBean.getIdToPeriodeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Periode>() {
            public com.rpll.app.model.Periode convert(java.lang.String id) {
                return Periode.findPeriode(id);
            }
        };
    }
    
    public Converter<Staff, String> ApplicationConversionServiceFactoryBean.getStaffToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.Staff, java.lang.String>() {
            public String convert(Staff staff) {
                return new StringBuilder().append(staff.getPassStaff()).append(' ').append(staff.getJabatan()).toString();
            }
        };
    }
    
    public Converter<String, Staff> ApplicationConversionServiceFactoryBean.getIdToStaffConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.Staff>() {
            public com.rpll.app.model.Staff convert(java.lang.String id) {
                return Staff.findStaff(id);
            }
        };
    }
    
    public Converter<TanggungJawab, String> ApplicationConversionServiceFactoryBean.getTanggungJawabToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.TanggungJawab, java.lang.String>() {
            public String convert(TanggungJawab tanggungJawab) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<TanggungJawabPK, TanggungJawab> ApplicationConversionServiceFactoryBean.getIdToTanggungJawabConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.TanggungJawabPK, com.rpll.app.model.TanggungJawab>() {
            public com.rpll.app.model.TanggungJawab convert(com.rpll.app.model.TanggungJawabPK id) {
                return TanggungJawab.findTanggungJawab(id);
            }
        };
    }
    
    public Converter<String, TanggungJawab> ApplicationConversionServiceFactoryBean.getStringToTanggungJawabConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.TanggungJawab>() {
            public com.rpll.app.model.TanggungJawab convert(String id) {
                return getObject().convert(getObject().convert(id, TanggungJawabPK.class), TanggungJawab.class);
            }
        };
    }
    
    public Converter<String, AbsenPK> ApplicationConversionServiceFactoryBean.getJsonToAbsenPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.AbsenPK>() {
            public AbsenPK convert(String encodedJson) {
                return AbsenPK.fromJsonToAbsenPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<AbsenPK, String> ApplicationConversionServiceFactoryBean.getAbsenPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.AbsenPK, java.lang.String>() {
            public String convert(AbsenPK absenPK) {
                return Base64.encodeBase64URLSafeString(absenPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, JadwalPK> ApplicationConversionServiceFactoryBean.getJsonToJadwalPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.JadwalPK>() {
            public JadwalPK convert(String encodedJson) {
                return JadwalPK.fromJsonToJadwalPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<JadwalPK, String> ApplicationConversionServiceFactoryBean.getJadwalPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.JadwalPK, java.lang.String>() {
            public String convert(JadwalPK jadwalPK) {
                return Base64.encodeBase64URLSafeString(jadwalPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FrsPK> ApplicationConversionServiceFactoryBean.getJsonToFrsPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.FrsPK>() {
            public FrsPK convert(String encodedJson) {
                return FrsPK.fromJsonToFrsPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FrsPK, String> ApplicationConversionServiceFactoryBean.getFrsPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.FrsPK, java.lang.String>() {
            public String convert(FrsPK frsPK) {
                return Base64.encodeBase64URLSafeString(frsPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, TanggungJawabPK> ApplicationConversionServiceFactoryBean.getJsonToTanggungJawabPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.TanggungJawabPK>() {
            public TanggungJawabPK convert(String encodedJson) {
                return TanggungJawabPK.fromJsonToTanggungJawabPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<TanggungJawabPK, String> ApplicationConversionServiceFactoryBean.getTanggungJawabPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.TanggungJawabPK, java.lang.String>() {
            public String convert(TanggungJawabPK tanggungJawabPK) {
                return Base64.encodeBase64URLSafeString(tanggungJawabPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, NilaiPK> ApplicationConversionServiceFactoryBean.getJsonToNilaiPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rpll.app.model.NilaiPK>() {
            public NilaiPK convert(String encodedJson) {
                return NilaiPK.fromJsonToNilaiPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<NilaiPK, String> ApplicationConversionServiceFactoryBean.getNilaiPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rpll.app.model.NilaiPK, java.lang.String>() {
            public String convert(NilaiPK nilaiPK) {
                return Base64.encodeBase64URLSafeString(nilaiPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAbsenToStringConverter());
        registry.addConverter(getIdToAbsenConverter());
        registry.addConverter(getStringToAbsenConverter());
        registry.addConverter(getBadanHukumToStringConverter());
        registry.addConverter(getIdToBadanHukumConverter());
        registry.addConverter(getBahanKuliahToStringConverter());
        registry.addConverter(getIdToBahanKuliahConverter());
        registry.addConverter(getBiayaToStringConverter());
        registry.addConverter(getIdToBiayaConverter());
        registry.addConverter(getDepartemenToStringConverter());
        registry.addConverter(getIdToDepartemenConverter());
        registry.addConverter(getDosenToStringConverter());
        registry.addConverter(getIdToDosenConverter());
        registry.addConverter(getFakultasToStringConverter());
        registry.addConverter(getIdToFakultasConverter());
        registry.addConverter(getFasilitasToStringConverter());
        registry.addConverter(getIdToFasilitasConverter());
        registry.addConverter(getFrsToStringConverter());
        registry.addConverter(getIdToFrsConverter());
        registry.addConverter(getStringToFrsConverter());
        registry.addConverter(getHakAksesToStringConverter());
        registry.addConverter(getIdToHakAksesConverter());
        registry.addConverter(getJadwalToStringConverter());
        registry.addConverter(getIdToJadwalConverter());
        registry.addConverter(getStringToJadwalConverter());
        registry.addConverter(getKelasToStringConverter());
        registry.addConverter(getIdToKelasConverter());
        registry.addConverter(getKritikSaranToStringConverter());
        registry.addConverter(getIdToKritikSaranConverter());
        registry.addConverter(getMahasiswaToStringConverter());
        registry.addConverter(getIdToMahasiswaConverter());
        registry.addConverter(getMataKuliahToStringConverter());
        registry.addConverter(getIdToMataKuliahConverter());
        registry.addConverter(getNilaiToStringConverter());
        registry.addConverter(getIdToNilaiConverter());
        registry.addConverter(getStringToNilaiConverter());
        registry.addConverter(getPegawaiToStringConverter());
        registry.addConverter(getIdToPegawaiConverter());
        registry.addConverter(getPengumumanToStringConverter());
        registry.addConverter(getIdToPengumumanConverter());
        registry.addConverter(getPeriodeToStringConverter());
        registry.addConverter(getIdToPeriodeConverter());
        registry.addConverter(getStaffToStringConverter());
        registry.addConverter(getIdToStaffConverter());
        registry.addConverter(getTanggungJawabToStringConverter());
        registry.addConverter(getIdToTanggungJawabConverter());
        registry.addConverter(getStringToTanggungJawabConverter());
        registry.addConverter(getJsonToAbsenPKConverter());
        registry.addConverter(getAbsenPKToJsonConverter());
        registry.addConverter(getJsonToJadwalPKConverter());
        registry.addConverter(getJadwalPKToJsonConverter());
        registry.addConverter(getJsonToFrsPKConverter());
        registry.addConverter(getFrsPKToJsonConverter());
        registry.addConverter(getJsonToTanggungJawabPKConverter());
        registry.addConverter(getTanggungJawabPKToJsonConverter());
        registry.addConverter(getJsonToNilaiPKConverter());
        registry.addConverter(getNilaiPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
